
.temp.file.elf:     file format elf32-littleriscv

SYMBOL TABLE:
00000000 l    d  .init	00000000 .init
00000054 l    d  .text	00000000 .text
02000000 l    d  .data	00000000 .data
02000000 l    d  .bss	00000000 .bss
02000000 l    d  .stack	00000000 .stack
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    df *ABS*	00000000 tls.c
00000000 l    df *ABS*	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
000000e2 l       .debug_info	00000000 
00000000 g       *ABS*	00000000 __data_size
02000800 g       .data	00000000 __global_pointer$
02000000 g       .bss	00000000 __tls_base
00000800 g       *ABS*	00000000 __flash_size
00000040 g       *ABS*	00000000 __stack_size
00000000 g       *ABS*	00000000 __bss_size
00000408 g     F .text	00000024 memcpy
02000000 g       .bss	00000000 __bss_end
00000000 g       *ABS*	00000000 __tbss_size
00000400 g     F .text	00000008 _set_tls
000000e2  w      .debug_info	00000000 .hidden t1b_path_planner.c.ce372bb3
00000000 g     F .init	00000000 _start
02000000 g       *ABS*	00000000 __ram
02000000 g       .bss	00000000 __data_end
00000448 g       .text	00000000 __text_end
02000000 g       .bss	00000000 __bss_start
0000042c g     F .text	0000001c memset
00000054 g     F .text	000003ac main
00000100 g       *ABS*	00000000 __ram_size
02000100 g       .init	00000000 __stack
00000000 g     F *ABS*	00000000 vfscanf
00000448 g       *ABS*	00000000 __data_source
00000000 g       *ABS*	00000000 __flash
02000000 g       .data	00000000 __data_start
00000000 g     F *ABS*	00000000 vfprintf



Disassembly of section .init:

00000000 <_start>:
   0:	    02000117          	auipc	x2,0x2000
   4:	    10010113          	addi	x2,x2,256 # 2000100 <__stack>
   8:	    02000197          	auipc	x3,0x2000
   c:	    7f818193          	addi	x3,x3,2040 # 2000800 <__global_pointer$>
  10:	    02000517          	auipc	x10,0x2000
  14:	    ff050513          	addi	x10,x10,-16 # 2000000 <__bss_end>
  18:	    44800593          	addi	x11,x0,1096
  1c:	    00000613          	addi	x12,x0,0
  20:	    3e8000ef          	jal	x1,408 <memcpy>
  24:	    02000517          	auipc	x10,0x2000
  28:	    fdc50513          	addi	x10,x10,-36 # 2000000 <__bss_end>
  2c:	    00000593          	addi	x11,x0,0
  30:	    00000613          	addi	x12,x0,0
  34:	    3f8000ef          	jal	x1,42c <memset>
  38:	    02000517          	auipc	x10,0x2000
  3c:	    fc850513          	addi	x10,x10,-56 # 2000000 <__bss_end>
  40:	    3c0000ef          	jal	x1,400 <_set_tls>
  44:	    00000513          	addi	x10,x0,0
  48:	    00000593          	addi	x11,x0,0
  4c:	    008000ef          	jal	x1,54 <main>
  50:	/-- 0000006f          	jal	x0,50 <__stack_size+0x10>

Disassembly of section .text:

00000054 <main>:
     ###         // volatile uint8_t *path_planned=(volatile uint8_t*)0x020000c8;
     ###     #endif
     ### 
     ###    {////*idx = *idx + 1;
     ### 
     ### *(nodes+(0 )) =    1684300801 ;//*idx = *idx + 1;
  54:	             64646737          	lui	x14,0x64646
  58:	             020007b7          	lui	x15,0x2000
  5c:	             40170693          	addi	x13,x14,1025 # 64646401 <__global_pointer$+0x62645c01>
  60:	             00d7a823          	sw	x13,16(x15) # 2000010 <__bss_end+0x10>
     ### *(nodes+(1 )) =    1679622656 ;//*idx = *idx + 1; 
  64:	             641d06b7          	lui	x13,0x641d0
  68:	             20068693          	addi	x13,x13,512 # 641d0200 <__global_pointer$+0x621cfa00>
  6c:	             00d7aa23          	sw	x13,20(x15)
     ### *(nodes+(2 )) =    1678246657 ;//*idx = *idx + 1; 
  70:	             640806b7          	lui	x13,0x64080
  74:	             30168693          	addi	x13,x13,769 # 64080301 <__global_pointer$+0x6207fb01>
  78:	             00d7ac23          	sw	x13,24(x15)
     ### *(nodes+(3)) =    1679557634 ;//*idx = *idx + 1; 
  7c:	             641c06b7          	lui	x13,0x641c0
  80:	             40268693          	addi	x13,x13,1026 # 641c0402 <__global_pointer$+0x621bfc02>
  84:	             00d7ae23          	sw	x13,28(x15)
     ### *(nodes+(4 )) =    1678116099 ;//*idx = *idx + 1; 
  88:	             640606b7          	lui	x13,0x64060
  8c:	             50368693          	addi	x13,x13,1283 # 64060503 <__global_pointer$+0x6205fd03>
  90:	             02d7a023          	sw	x13,32(x15)
     ### *(nodes+(5 )) =    1684300804 ;//*idx = *idx + 1; 
  94:	             40470693          	addi	x13,x14,1028
  98:	             02d7a223          	sw	x13,36(x15)
     ### *(nodes+(6 )) =    1684276996 ;//*idx = *idx + 1; 
  9c:	             646406b7          	lui	x13,0x64640
  a0:	             70468693          	addi	x13,x13,1796 # 64640704 <__global_pointer$+0x6263ff04>
  a4:	             02d7a423          	sw	x13,40(x15)
     ### *(nodes+(7 )) =    1684277254 ;//*idx = *idx + 1; 
  a8:	             646416b7          	lui	x13,0x64641
  ac:	             80668613          	addi	x12,x13,-2042 # 64640806 <__global_pointer$+0x62640006>
  b0:	             02c7a623          	sw	x12,44(x15)
     ### *(nodes+(8 )) =    201918210  ;//*idx = *idx + 1; 
  b4:	             0c090637          	lui	x12,0xc090
  b8:	             70260613          	addi	x12,x12,1794 # c090702 <__global_pointer$+0xa08ff02>
  bc:	             02c7a823          	sw	x12,48(x15)
     ### *(nodes+(9 )) =    1678445064 ;//*idx = *idx + 1; 
  c0:	             640b1637          	lui	x12,0x640b1
  c4:	             a0860613          	addi	x12,x12,-1528 # 640b0a08 <__global_pointer$+0x620b0208>
  c8:	             02c7aa23          	sw	x12,52(x15)
     ### *(nodes+(10)) =    1684300809 ;//*idx = *idx + 1; 
  cc:	             40970613          	addi	x12,x14,1033
  d0:	             02c7ac23          	sw	x12,56(x15)
     ### *(nodes+(11)) =    1684300809 ;//*idx = *idx + 1; 
  d4:	             02c7ae23          	sw	x12,60(x15)
     ### *(nodes+(12)) =    1678970120 ;//*idx = *idx + 1; 
  d8:	             64131637          	lui	x12,0x64131
  dc:	             d0860613          	addi	x12,x12,-760 # 64130d08 <__global_pointer$+0x62130508>
  e0:	             04c7a023          	sw	x12,64(x15)
     ### *(nodes+(13)) =    1684278796 ;//*idx = *idx + 1; 
  e4:	             e0c68613          	addi	x12,x13,-500
  e8:	             04c7a223          	sw	x12,68(x15)
     ### *(nodes+(14)) =    1678774029 ;//*idx = *idx + 1; 
  ec:	             64101637          	lui	x12,0x64101
  f0:	             f0d60613          	addi	x12,x12,-243 # 64100f0d <__global_pointer$+0x6210070d>
  f4:	             04c7a423          	sw	x12,72(x15)
     ### *(nodes+(15)) =    1684300814 ;//*idx = *idx + 1; 
  f8:	             40e70613          	addi	x12,x14,1038
  fc:	             04c7a623          	sw	x12,76(x15)
     ### *(nodes+(16)) =    1678905614 ;//*idx = *idx + 1; 
 100:	             64121637          	lui	x12,0x64121
 104:	             10e60613          	addi	x12,x12,270 # 6412110e <__global_pointer$+0x6212090e>
 108:	             04c7a823          	sw	x12,80(x15)
     ### *(nodes+(17)) =    1684300816 ;//*idx = *idx + 1; 
 10c:	             41070613          	addi	x12,x14,1040
 110:	             04c7aa23          	sw	x12,84(x15)
     ### *(nodes+(18)) =    1684280080 ;//*idx = *idx + 1; 
 114:	             31068693          	addi	x13,x13,784
 118:	             04d7ac23          	sw	x13,88(x15)
     ### *(nodes+(19)) =    1679036940 ;//*idx = *idx + 1; 
 11c:	             641416b7          	lui	x13,0x64141
 120:	             20c68693          	addi	x13,x13,524 # 6414120c <__global_pointer$+0x62140a0c>
 124:	             04d7ae23          	sw	x13,92(x15)
     ### *(nodes+(20)) =    488117523  ;//*idx = *idx + 1; 
 128:	             1d1816b7          	lui	x13,0x1d181
 12c:	             51368693          	addi	x13,x13,1299 # 1d181513 <__global_pointer$+0x1b180d13>
 130:	             06d7a023          	sw	x13,96(x15)
     ### *(nodes+(21)) =    1679234580 ;//*idx = *idx + 1; 
 134:	             641716b7          	lui	x13,0x64171
 138:	             61468693          	addi	x13,x13,1556 # 64171614 <__global_pointer$+0x62170e14>
 13c:	             06d7a223          	sw	x13,100(x15)
     ### *(nodes+(22)) =    1684300821 ;//*idx = *idx + 1; 
 140:	             41570693          	addi	x13,x14,1045
 144:	             06d7a423          	sw	x13,104(x15)
     ### *(nodes+(23)) =    1684300821 ;//*idx = *idx + 1; 
 148:	             06d7a623          	sw	x13,108(x15)
     ### *(nodes+(24)) =    1684281620 ;//*idx = *idx + 1; 
 14c:	             646426b7          	lui	x13,0x64642
 150:	             91468613          	addi	x12,x13,-1772 # 64641914 <__global_pointer$+0x62641114>
 154:	             06c7a823          	sw	x12,112(x15)
     ### *(nodes+(25)) =    1684281880 ;//*idx = *idx + 1; 
 158:	             a1868693          	addi	x13,x13,-1512
 15c:	             06d7aa23          	sw	x13,116(x15)
     ### *(nodes+(26)) =    1679563545 ;//*idx = *idx + 1; 
 160:	             641c26b7          	lui	x13,0x641c2
 164:	             b1968693          	addi	x13,x13,-1255 # 641c1b19 <__global_pointer$+0x621c1319>
 168:	             06d7ac23          	sw	x13,120(x15)
     ### *(nodes+(27)) =    1684300826 ;//*idx = *idx + 1; 
 16c:	             41a70713          	addi	x14,x14,1050
 170:	             06e7ae23          	sw	x14,124(x15)
     ### *(nodes+(28)) =    1679628803 ;//*idx = *idx + 1; 
 174:	             641d2737          	lui	x14,0x641d2
 178:	             a0370713          	addi	x14,x14,-1533 # 641d1a03 <__global_pointer$+0x621d1203>
 17c:	             08e7a023          	sw	x14,128(x15)
     ### *(nodes+(29)) =    1679561729 ;//*idx = *idx + 1; 
 180:	             641c1737          	lui	x14,0x641c1
 184:	             40170713          	addi	x14,x14,1025 # 641c1401 <__global_pointer$+0x621c0c01>
 188:	             08e7a223          	sw	x14,132(x15)
     ###    
     ### 
     ### idx=0;
     ### //uint8_t *pointer;
     ###     // Initialize distances and visited array
     ###     for (int v=0;v<30;v++) {
 18c:	             02000637          	lui	x12,0x2000
     ### idx=0;
 190:	             0e0785a3          	sb	x0,235(x15)
     ###         dist[v] = 100;
 194:	             06400713          	addi	x14,x0,100
     ### idx=0;
 198:	             08878793          	addi	x15,x15,136
     ###     for (int v=0;v<30;v++) {
 19c:	             0a660693          	addi	x13,x12,166 # 20000a6 <__bss_end+0xa6>
     ###         dist[v] = 100;
 1a0:	         /-> 00e78023          	sb	x14,0(x15)
     ###         parent[v] = 100;
 1a4:	         |   02e78023          	sb	x14,32(x15)
     ###         path_planned[v] = 0;
 1a8:	         |   04078023          	sb	x0,64(x15)
     ###     for (int v=0;v<30;v++) {
 1ac:	         |   00178793          	addi	x15,x15,1
 1b0:	         \-- fed798e3          	bne	x15,x13,1a0 <__ram_size+0xa0>
     ###     //uint8_t visited[30]={0};
     ### 
     ### 
     ### 
     ###    
     ###     dist[START_POINT] = 0;
 1b4:	             00064783          	lbu	x15,0(x12)
 1b8:	             08860613          	addi	x12,x12,136
 1bc:	             01d00593          	addi	x11,x0,29
 1c0:	             0ff7f793          	andi	x15,x15,255
 1c4:	             00c787b3          	add	x15,x15,x12
 1c8:	             00078023          	sb	x0,0(x15)
     ### 
     ###     
     ###     for (int count = 0; count < 29; count++) {
     ###         //  uint8_t minDist = 32;
     ###         //  uint8_t u=0;
     ###         minDist = 32;
 1cc:	             020007b7          	lui	x15,0x2000
 1d0:	             02000893          	addi	x17,x0,32
 1d4:	             0c878513          	addi	x10,x15,200 # 20000c8 <__bss_end+0xc8>
     ###         u =0;
     ###         for (int v = 0; v < 30; v++) {
 1d8:	             01e00813          	addi	x16,x0,30
     ###                 //check = minDist;
     ###             }
     ###         }
     ### 
     ###   
     ###         path_planned[u] = 1;
 1dc:	             00100313          	addi	x6,x0,1
     ###         
     ###       
     ###         for (int v = 0; v < 30; v++) {
     ###             pointer=(uint8_t *)(nodes+u);
 1e0:	             01078e13          	addi	x28,x15,16
 1e4:	             0a878e93          	addi	x29,x15,168
     ###         minDist = 32;
 1e8:	/----------> 0f178423          	sb	x17,232(x15)
     ###         u =0;
 1ec:	|            0e0784a3          	sb	x0,233(x15)
     ###         for (int v = 0; v < 30; v++) {
 1f0:	|            00000713          	addi	x14,x0,0
     ###             if (!path_planned[v] && dist[v] < minDist) {
 1f4:	|     /----> 00a706b3          	add	x13,x14,x10
 1f8:	|     |      0006c683          	lbu	x13,0(x13)
 1fc:	|     |      0ff6f693          	andi	x13,x13,255
 200:	|     |  /-- 02069863          	bne	x13,x0,230 <__ram_size+0x130>
 204:	|     |  |   00c70fb3          	add	x31,x14,x12
 208:	|     |  |   000fcf03          	lbu	x30,0(x31)
 20c:	|     |  |   0e87c683          	lbu	x13,232(x15)
 210:	|     |  |   0fff7f13          	andi	x30,x30,255
 214:	|     |  |   0ff6f693          	andi	x13,x13,255
 218:	|     |  +-- 00df7c63          	bgeu	x30,x13,230 <__ram_size+0x130>
     ###                 minDist = dist[v];
 21c:	|     |  |   000fc683          	lbu	x13,0(x31)
 220:	|     |  |   0ff6f693          	andi	x13,x13,255
 224:	|     |  |   0ed78423          	sb	x13,232(x15)
     ###                 u = v;
 228:	|     |  |   0ff77693          	andi	x13,x14,255
 22c:	|     |  |   0ed784a3          	sb	x13,233(x15)
     ###         for (int v = 0; v < 30; v++) {
 230:	|     |  \-> 00170713          	addi	x14,x14,1
 234:	|     \----- fd0710e3          	bne	x14,x16,1f4 <__ram_size+0xf4>
     ###         path_planned[u] = 1;
 238:	|            0e97c703          	lbu	x14,233(x15)
 23c:	|            0ff77713          	andi	x14,x14,255
 240:	|            00a70733          	add	x14,x14,x10
 244:	|            00670023          	sb	x6,0(x14)
     ###         for (int v = 0; v < 30; v++) {
 248:	|            00000713          	addi	x14,x0,0
     ###             pointer=(uint8_t *)(nodes+u);
 24c:	|  /-------> 00a70f33          	add	x30,x14,x10
 250:	|  |         0e97c683          	lbu	x13,233(x15)
     ###             if (!path_planned[v] && ((pointer[0]==v) || (pointer[1]==v) ||(pointer[2]==v) ||(pointer[3]==v)) && dist[u] + 1 < dist[v]) {
 254:	|  |         000f4f03          	lbu	x30,0(x30)
     ###             pointer=(uint8_t *)(nodes+u);
 258:	|  |         0ff6f693          	andi	x13,x13,255
     ###             if (!path_planned[v] && ((pointer[0]==v) || (pointer[1]==v) ||(pointer[2]==v) ||(pointer[3]==v)) && dist[u] + 1 < dist[v]) {
 25c:	|  |         0fff7f13          	andi	x30,x30,255
 260:	|  |  /----- 080f1863          	bne	x30,x0,2f0 <__ram_size+0x1f0>
     ###             pointer=(uint8_t *)(nodes+u);
 264:	|  |  |      00269693          	slli	x13,x13,0x2
 268:	|  |  |      01c686b3          	add	x13,x13,x28
     ###             if (!path_planned[v] && ((pointer[0]==v) || (pointer[1]==v) ||(pointer[2]==v) ||(pointer[3]==v)) && dist[u] + 1 < dist[v]) {
 26c:	|  |  |      0006cf03          	lbu	x30,0(x13)
 270:	|  |  |      0fff7f13          	andi	x30,x30,255
 274:	|  |  |  /-- 02ef0463          	beq	x30,x14,29c <__ram_size+0x19c>
 278:	|  |  |  |   0016cf03          	lbu	x30,1(x13)
 27c:	|  |  |  |   0fff7f13          	andi	x30,x30,255
 280:	|  |  |  +-- 00ef0e63          	beq	x30,x14,29c <__ram_size+0x19c>
 284:	|  |  |  |   0026cf03          	lbu	x30,2(x13)
 288:	|  |  |  |   0fff7f13          	andi	x30,x30,255
 28c:	|  |  |  +-- 00ef0863          	beq	x30,x14,29c <__ram_size+0x19c>
 290:	|  |  |  |   0036c683          	lbu	x13,3(x13)
 294:	|  |  |  |   0ff6f693          	andi	x13,x13,255
 298:	|  |  +--|-- 04e69c63          	bne	x13,x14,2f0 <__ram_size+0x1f0>
 29c:	|  |  |  \-> 0e97c683          	lbu	x13,233(x15)
 2a0:	|  |  |      00c70fb3          	add	x31,x14,x12
 2a4:	|  |  |      0ff6f693          	andi	x13,x13,255
 2a8:	|  |  |      00c686b3          	add	x13,x13,x12
 2ac:	|  |  |      0006c683          	lbu	x13,0(x13)
 2b0:	|  |  |      000fcf03          	lbu	x30,0(x31)
 2b4:	|  |  |      0ff6f693          	andi	x13,x13,255
 2b8:	|  |  |      0fff7f13          	andi	x30,x30,255
 2bc:	|  |  |      00168693          	addi	x13,x13,1
 2c0:	|  |  +----- 03e6d863          	bge	x13,x30,2f0 <__ram_size+0x1f0>
     ###                 dist[v] = dist[u] + 1;
 2c4:	|  |  |      0e97c683          	lbu	x13,233(x15)
 2c8:	|  |  |      0ff6f693          	andi	x13,x13,255
 2cc:	|  |  |      00c686b3          	add	x13,x13,x12
 2d0:	|  |  |      0006c683          	lbu	x13,0(x13)
 2d4:	|  |  |      00168693          	addi	x13,x13,1
 2d8:	|  |  |      0ff6f693          	andi	x13,x13,255
 2dc:	|  |  |      00df8023          	sb	x13,0(x31)
     ###                 parent[v] = u;
 2e0:	|  |  |      0e97cf03          	lbu	x30,233(x15)
 2e4:	|  |  |      01d706b3          	add	x13,x14,x29
 2e8:	|  |  |      0fff7f13          	andi	x30,x30,255
 2ec:	|  |  |      01e68023          	sb	x30,0(x13)
     ###         for (int v = 0; v < 30; v++) {
 2f0:	|  |  \----> 00170713          	addi	x14,x14,1
 2f4:	|  \-------- f5071ce3          	bne	x14,x16,24c <__ram_size+0x14c>
     ###     for (int count = 0; count < 29; count++) {
 2f8:	|            fff58593          	addi	x11,x11,-1
 2fc:	\----------- ee0596e3          	bne	x11,x0,1e8 <__ram_size+0xe8>
     ###         
     ###     }
     ### 
     ###    
     ###   
     ### k=END_POINT;
 300:	             02000737          	lui	x14,0x2000
 304:	             00474783          	lbu	x15,4(x14) # 2000004 <__bss_end+0x4>
     ### 
     ### 
     ### while (parent[k] != 100) {
 308:	             06400593          	addi	x11,x0,100
     ### k=END_POINT;
 30c:	             0ff7f793          	andi	x15,x15,255
 310:	             0ef70523          	sb	x15,234(x14)
     ### while (parent[k] != 100) {
 314:	             020007b7          	lui	x15,0x2000
 318:	             0a878613          	addi	x12,x15,168 # 20000a8 <__bss_end+0xa8>
     ###                 
     ###                 path_planned[(dist[END_POINT]-idx)]=k;
 31c:	             08878513          	addi	x10,x15,136
 320:	             0c878813          	addi	x16,x15,200
     ### while (parent[k] != 100) {
 324:	/----------> 0ea7c703          	lbu	x14,234(x15)
 328:	|            0ff77713          	andi	x14,x14,255
 32c:	|            00c70733          	add	x14,x14,x12
 330:	|            00074703          	lbu	x14,0(x14)
 334:	|            0ff77713          	andi	x14,x14,255
 338:	|        /-- 04b71a63          	bne	x14,x11,38c <__ram_size+0x28c>
     ###                 idx++;
     ###                 k = parent[k];
     ###             }
     ### idx=idx+1;            
 33c:	|        |   0eb7c703          	lbu	x14,235(x15)
 340:	|        |   00170713          	addi	x14,x14,1
 344:	|        |   0ff77713          	andi	x14,x14,255
 348:	|        |   0ee785a3          	sb	x14,235(x15)
     ### path_planned[0]=START_POINT;            
 34c:	|        |   0007c703          	lbu	x14,0(x15)
 350:	|        |   0ff77713          	andi	x14,x14,255
 354:	|        |   0ce78423          	sb	x14,200(x15)
     ### 
     ### 
     ### NODE_POINT=START_POINT;
 358:	|        |   0007c703          	lbu	x14,0(x15)
 35c:	|        |   0ff77713          	andi	x14,x14,255
 360:	|        |   00e78423          	sb	x14,8(x15)
     ###     // ##############################################
     ### 
     ###     // the node values are written into data memory sequentially.
     ###     for (int v=1; v < idx; ++v) {
 364:	|        |   020007b7          	lui	x15,0x2000
 368:	|        |   00100713          	addi	x14,x0,1
 36c:	|        |   0c878613          	addi	x12,x15,200 # 20000c8 <__bss_end+0xc8>
 370:	|  /-----|-> 0eb7c683          	lbu	x13,235(x15)
 374:	|  |     |   0ff6f693          	andi	x13,x13,255
 378:	|  |  /--|-- 06d74863          	blt	x14,x13,3e8 <__ram_size+0x2e8>
     ###         NODE_POINT = path_planned[v];
     ###     }
     ###     // Path Planning Computation Done Flag
     ###     CPU_DONE = 1;
 37c:	|  |  |  |   00100713          	addi	x14,x0,1
 380:	|  |  |  |   00e78623          	sb	x14,12(x15)
     ###         _put_str("################################\n");
     ### 
     ###     #endif
     ### 
     ###     return 0;
     ### }
 384:	|  |  |  |   00000513          	addi	x10,x0,0
 388:	|  |  |  |   00008067          	jalr	x0,0(x1)
     ###                 path_planned[(dist[END_POINT]-idx)]=k;
 38c:	|  |  |  \-> 0047c703          	lbu	x14,4(x15)
 390:	|  |  |      0ff77713          	andi	x14,x14,255
 394:	|  |  |      00a70733          	add	x14,x14,x10
 398:	|  |  |      00074703          	lbu	x14,0(x14)
 39c:	|  |  |      0eb7c683          	lbu	x13,235(x15)
 3a0:	|  |  |      0ff77713          	andi	x14,x14,255
 3a4:	|  |  |      0ff6f693          	andi	x13,x13,255
 3a8:	|  |  |      40d70733          	sub	x14,x14,x13
 3ac:	|  |  |      0ea7c683          	lbu	x13,234(x15)
 3b0:	|  |  |      01070733          	add	x14,x14,x16
 3b4:	|  |  |      0ff6f693          	andi	x13,x13,255
 3b8:	|  |  |      00d70023          	sb	x13,0(x14)
     ###                 idx++;
 3bc:	|  |  |      0eb7c703          	lbu	x14,235(x15)
 3c0:	|  |  |      00170713          	addi	x14,x14,1
 3c4:	|  |  |      0ff77713          	andi	x14,x14,255
 3c8:	|  |  |      0ee785a3          	sb	x14,235(x15)
     ###                 k = parent[k];
 3cc:	|  |  |      0ea7c703          	lbu	x14,234(x15)
 3d0:	|  |  |      0ff77713          	andi	x14,x14,255
 3d4:	|  |  |      00c70733          	add	x14,x14,x12
 3d8:	|  |  |      00074703          	lbu	x14,0(x14)
 3dc:	|  |  |      0ff77713          	andi	x14,x14,255
 3e0:	|  |  |      0ee78523          	sb	x14,234(x15)
 3e4:	\--|--|----- f41ff06f          	jal	x0,324 <__ram_size+0x224>
     ###         NODE_POINT = path_planned[v];
 3e8:	   |  \----> 00c706b3          	add	x13,x14,x12
 3ec:	   |         0006c683          	lbu	x13,0(x13)
     ###     for (int v=1; v < idx; ++v) {
 3f0:	   |         00170713          	addi	x14,x14,1
     ###         NODE_POINT = path_planned[v];
 3f4:	   |         0ff6f693          	andi	x13,x13,255
 3f8:	   |         00d78423          	sb	x13,8(x15)
     ###     for (int v=1; v < idx; ++v) {
 3fc:	   \-------- f75ff06f          	jal	x0,370 <__ram_size+0x270>

00000400 <_set_tls>:
 400:	00050213          	addi	x4,x10,0
 404:	00008067          	jalr	x0,0(x1)

00000408 <memcpy>:
 408:	       00050313          	addi	x6,x10,0
 40c:	/----- 00060e63          	beq	x12,x0,428 <memcpy+0x20>
 410:	|  /-> 00058383          	lb	x7,0(x11)
 414:	|  |   00730023          	sb	x7,0(x6)
 418:	|  |   fff60613          	addi	x12,x12,-1
 41c:	|  |   00130313          	addi	x6,x6,1
 420:	|  |   00158593          	addi	x11,x11,1
 424:	|  \-- fe0616e3          	bne	x12,x0,410 <memcpy+0x8>
 428:	\----> 00008067          	jalr	x0,0(x1)

0000042c <memset>:
 42c:	       00050313          	addi	x6,x10,0
 430:	/----- 00060a63          	beq	x12,x0,444 <memset+0x18>
 434:	|  /-> 00b30023          	sb	x11,0(x6)
 438:	|  |   fff60613          	addi	x12,x12,-1
 43c:	|  |   00130313          	addi	x6,x6,1
 440:	|  \-- fe061ae3          	bne	x12,x0,434 <memset+0x8>
 444:	\----> 00008067          	jalr	x0,0(x1)
